/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MAX_REWARD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600f600155683635c9adc5dea0000060025534801561002257600080fd5b50604051610a2b380380610a2b83398101604081905261004191610066565b600080546001600160a01b0319166001600160a01b0392909216919091179055610096565b60006020828403121561007857600080fd5b81516001600160a01b038116811461008f57600080fd5b9392505050565b610986806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80634641257d1161005b5780634641257d14610106578063a694fc3a1461010e578063c00007b014610121578063fc0c546a1461013457600080fd5b80630e1505e01461008d57806316934fc4146100a95780632c4e722e146100f35780632def6620146100fc575b600080fd5b61009660025481565b6040519081526020015b60405180910390f35b6100d86100b73660046107d2565b60036020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016100a0565b61009660015481565b61010461015f565b005b6101046101dd565b61010461011c3660046107fb565b61027d565b61009661012f3660046107d2565b6103eb565b600054610147906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b600061016a336103eb565b1115610178576101786101dd565b3360008181526003602081815260408084206001810180548351606081018552878152808601888152948101888152898952969095529351825591519091559151600290920191909155905490916101da916001600160a01b031690836104d7565b50565b60006101e8336103eb565b90506000811161023f5760405162461bcd60e51b815260206004820152601860248201527f596f7520646f6e74206861766520616e7920726577617264000000000000000060448201526064015b60405180910390fd5b336000908152600360205260408120600201805483929061026190849061082a565b90915550506000546101da906001600160a01b031633836104d7565b33600090815260036020526040902054156102da5760405162461bcd60e51b815260206004820152601a60248201527f596f7520686176652068616420616c7265616479207374616b650000000000006044820152606401610236565b6002546000546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610325573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103499190610842565b116103965760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f75676820746f6b656e73206f6e20636f6e74726163740000006044820152606401610236565b6000546103ae906001600160a01b031633308461053f565b6040805160608101825242815260208082019384526000828401818152338252600390925292909220905181559151600183015551600290910155565b6001600160a01b03811660009081526003602052604081205461041057506000919050565b6001600160a01b038216600090815260036020526040812054600a90610436904261085b565b6104409190610872565b90506000606460036000866001600160a01b03166001600160a01b03168152602001908152602001600020600101548360015461047d9190610894565b6104879190610894565b6104919190610872565b6001600160a01b038516600090815260036020526040902060029081015490549192509082116104c157816104c5565b6002545b6104cf919061085b565b949350505050565b6040516001600160a01b03831660248201526044810182905261053a90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261057d565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526105779085906323b872dd60e01b90608401610503565b50505050565b60006105d2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661064f9092919063ffffffff16565b80519091501561053a57808060200190518101906105f091906108b3565b61053a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610236565b606061065e8484600085610668565b90505b9392505050565b6060824710156106c95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610236565b6001600160a01b0385163b6107205760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610236565b600080866001600160a01b0316858760405161073c9190610901565b60006040518083038185875af1925050503d8060008114610779576040519150601f19603f3d011682016040523d82523d6000602084013e61077e565b606091505b509150915061078e828286610799565b979650505050505050565b606083156107a8575081610661565b8251156107b85782518084602001fd5b8160405162461bcd60e51b8152600401610236919061091d565b6000602082840312156107e457600080fd5b81356001600160a01b038116811461066157600080fd5b60006020828403121561080d57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561083d5761083d610814565b500190565b60006020828403121561085457600080fd5b5051919050565b60008282101561086d5761086d610814565b500390565b60008261088f57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156108ae576108ae610814565b500290565b6000602082840312156108c557600080fd5b8151801515811461066157600080fd5b60005b838110156108f05781810151838201526020016108d8565b838111156105775750506000910152565b600082516109138184602087016108d5565b9190910192915050565b602081526000825180602084015261093c8160408501602087016108d5565b601f01601f1916919091016040019291505056fea26469706673582212202c5aac4dbfd2aea8303766a86851bc81fe22d3d570b4f9d262bd4cdf37414f3f64736f6c634300080b0033";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(token_, overrides || {}) as Promise<Staking>;
  }
  getDeployTransaction(
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token_, overrides || {});
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
